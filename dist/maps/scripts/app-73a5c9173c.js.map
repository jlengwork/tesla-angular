{"version":3,"sources":["scripts/app.js"],"names":["angular","module","acmeNavbar","NavbarController","moment","vm","this","relativeDate","creationDate","fromNow","$inject","directive","restrict","templateUrl","scope","controller","controllerAs","bindToController","ctrlFn","$firebaseAuth","$log","Notification","$state","ref","Firebase","auth","signIn","authPrms","$authWithPassword","email","password","then","user","primary","info","transitionTo","error","signUp","prms","$createUser","resp","$firebaseArray","listitems","loadedPrms","$loaded","$watch","$filter","$rootScope","options","formState","labels","updateLabels","$on","event","data","entryFields","getFields","submit","entryForm","$valid","entry","timeRequested","dateRequested","setHours","getHours","setMinutes","getMinutes","timeSubmitted","Date","$add","firstName","lastName","phone","postalcode","requestDate","requestTime","submitTime","location","fieldGroup","className","key","type","templateOptions","required","expressionProperties","templateOptions.label","label","datepickerPopup","webDevTec","getTec","title","url","description","logo","service","acmeMalarkey","malarkey","linkFunc","el","attr","watcher","typist","typeSpeed","deleteSpeed","pauseDelay","loop","postfix","addClass","forEach","extraValues","value","pause","contributors","contributor","login","MalarkeyController","githubContributor","activate","getContributors","template","link","$http","limit","getContributorsComplete","response","getContributorsFailed","toJson","get","apiHost","factory","$translate","LOCALES","tmhDynamicLocale","localesObj","locales","_LOCALES","Object","keys","length","console","_LOCALES_DISPLAY_NAMES","locale","push","currentLocale","proposedLanguage","checkLocaleIsValid","indexOf","setLocale","use","document","documentElement","setAttribute","language","set","toLowerCase","replace","getLocaleDisplayName","setLocaleByDisplayName","localeDisplayName","getLocalesDisplayNames","MainController","$timeout","toastr","getWebDevTec","classAnimation","showToastr","awesomeThings","awesomeThing","rank","Math","random","LocaleService","$scope","currentLocaleDisplayName","localesDisplayNames","visible","changeLanguage","runBlock","formlyConfig","formlyValidationMessages","ngModelAttrs","extras","errorExistsAndShouldBeVisibleExpression","addStringMessage","camelize","attribute","binding","bound","setType","name","wrapper","defaultOptions","datepickerOptions","format","initDate","datepicker","opened","open","$event","debug","string","match","chr","toUpperCase","run","routerConfig","$stateProvider","$urlRouterProvider","when","state","otherwise","config","constant","es_MX","en_US","preferredLocale","$logProvider","toastrConfig","$translateProvider","tmhDynamicLocaleProvider","debugEnabled","allowHtml","timeOut","positionClass","preventDuplicates","progressBar","useMissingTranslationHandlerLog","useStaticFilesLoader","prefix","suffix","preferredLanguage","useLocalStorage","localeLocationPattern","$templateCache","put"],"mappings":"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","file":"scripts/app-73a5c9173c.js","sourcesContent":["(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular', [\n      'ngAnimate',\n      'ngCookies',\n      'ngTouch',\n      'ngSanitize',\n      'ngMessages',\n      'ngAria',\n      'restangular',\n      'ui.router',\n      'ui.bootstrap',\n      'toastr',\n      'firebase',\n      'ui-notification',\n      'formly',\n      'formlyBootstrap',\n      'pascalprecht.translate',// angular-translate\n      'tmh.dynamicLocale'// angular-dynamic-locale\n    ]);\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .directive('acmeNavbar', acmeNavbar);\n\n  /** @ngInject */\n  function acmeNavbar() {\n    var directive = {\n      restrict: 'E',\n      templateUrl: 'app/components/navbar/navbar.html',\n      scope: {\n          creationDate: '='\n      },\n      controller: NavbarController,\n      controllerAs: 'vm',\n      bindToController: true\n    };\n\n    return directive;\n\n    /** @ngInject */\n    function NavbarController(moment) {\n      var vm = this;\n\n      // \"vm.creationDate\" is available by directive option \"bindToController: true\"\n      vm.relativeDate = moment(vm.creationDate).fromNow();\n    }\n  }\n\n})();\n\n(function () {\n  angular.module('teslaAngular').controller('login.ctrl', ctrlFn);\n\n  ctrlFn.$inject = ['$firebaseAuth', '$log', 'Notification', '$state'];\n  function ctrlFn($firebaseAuth, $log, Notification, $state) {\n    var vm = this;\n    var ref = new Firebase('https://blistering-inferno-7880.firebaseIO.com');\n    vm.auth = $firebaseAuth(ref);\n\n\n    vm.signIn = function () {\n      var authPrms = vm.auth.$authWithPassword({\n        email: vm.email,\n        password: vm.password\n      })\n\n      authPrms.then(function (user) {\n        Notification.primary(\"Login Successful!\")\n        $log.info(\"Login Successful with \"+vm.email);\n        $state.transitionTo('listing');\n      });\n      authPrms.catch(function (error) {\n        Notification.error(\"Username or Password are invalid\");\n      });\n    }\n\n    vm.signUp = function () {\n      var prms = vm.auth.$createUser(vm.email, vm.password);\n      prms.then(function (resp) {\n        Notification.primary = 'Signed Up';\n      });\n      prms.error(function (resp) {\n        Notification.error(\"The username and password combination you entered is invalid.\");\n      });\n    };\n  } // end ctrlFn\n})();\n\n\n(function () {\n  angular.module('teslaAngular').controller('listing.ctrl', ctrlFn);\n\n  ctrlFn.$inject = ['$firebaseArray', '$log', 'Notification'];\n  function ctrlFn($firebaseArray, $log, Notification) {\n    var vm = this;\n    var ref = new Firebase('https://blistering-inferno-7880.firebaseIO.com/listitems');\n    vm.listitems = $firebaseArray(ref);\n\n    var loadedPrms = vm.listitems.$loaded();\n    loadedPrms.then(function(){\n      vm.listitems.$watch(function(){\n          Notification.primary(\"New Request Submitted!\");\n      });\n    });\n  } // end ctrlFn\n})();\n\n\n(function () {\n  angular.module('teslaAngular').controller('entry.ctrl', ctrlFn);\n\n  ctrlFn.$inject = ['$firebaseArray', '$log', 'Notification','$filter', '$rootScope'];\n  function ctrlFn($firebaseArray, $log, Notification,$filter, $rootScope) {\n    var vm = this;\n    var ref = new Firebase('https://blistering-inferno-7880.firebaseIO.com/listitems');\n    vm.listitems = $firebaseArray(ref);\n\n    vm.options = {};\n    vm.options.formState = {};\n    formState = vm.options.formState;\n    formState.$filter = $filter;\n    formState.labels = {};\n    updateLabels($filter,formState.labels);\n\n    // Update labels on change\n    $rootScope.$on('$translateChangeSuccess', function (event, data) {\n      updateLabels($filter,formState.labels);\n    });\n\n    vm.entryFields = getFields(vm.labels);\n    vm.submit = function(){\n      // Make sure form is valid before saving it\n      if (vm.entryForm.$valid) {\n        if (vm.entry.timeRequested != null){ //remember that double equals will try to convert it\n          vm.entry.dateRequested.setHours(vm.entry.timeRequested.getHours());\n          vm.entry.dateRequested.setMinutes(vm.entry.timeRequested.getMinutes());\n          vm.entry.timeRequested = vm.entry.dateRequested;\n          vm.entry.timeSubmitted = new Date();\n        }\n        vm.listitems.$add(vm.entry);\n      }\n    }\n\n  } // end ctrlFn\n\n\n  function updateLabels($filter, labels){\n    labels.firstName = $filter('translate')('views.firstName');\n    labels.lastName = $filter('translate')('views.lastName');\n    labels.email = $filter('translate')('views.email');\n    labels.phone = $filter('translate')('views.phone');\n    labels.postalcode = $filter('translate')('views.postalcode');\n    labels.requestDate = $filter('translate')('views.requestDate');\n    labels.requestTime = $filter('translate')('views.requestTime');\n    labels.submitTime = $filter('translate')('views.submitTime');\n    labels.location = $filter('translate')('views.location');\n  }\n\n  function getFields(){\n    return [\n      {\n       // className: \"row\",\n        fieldGroup: [\n          {\n            className: \"col-sm-6\",\n            key: 'firstname',\n            type: 'input',\n            templateOptions: {\n              type: 'text',\n              //placeholder: 'Enter your first name',\n              required: true,\n              //label:labels.firstName\n            }, //end templateOptions\n            expressionProperties:{\n             'templateOptions.label':\"formState.labels.firstName\"\n            }\n          },\n          {\n            className: \"col-sm-6\",\n            key: 'lastname',\n            type: 'input',\n            templateOptions: {\n              type: 'text',\n              label: 'Last Name',\n              // placeholder: 'Enter your last name',\n              required: true\n            }, //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.lastName\"\n            }\n          }\n        ]\n      },\n      {\n       // className: \"row\",\n        fieldGroup: [\n          {\n            className: \"col-sm-6\",\n            key: 'email',\n            type: 'input',\n            templateOptions: {\n              type: 'email',\n              label: 'Email address',\n             // placeholder: 'Enter email',\n              required: true\n            }, //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.email\"\n            }\n          },\n          {\n            className: \"col-sm-6\",\n            key: 'phone',\n            type: 'input',\n            templateOptions: {\n              type: 'text',\n              label: 'Phone',\n              //placeholder: 'Enter phone',\n              required: true\n            }, //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.phone\"\n            }\n          }\n        ]\n      },\n      {\n        //className: \"row\",\n        fieldGroup: [\n          {\n            className: \"col-sm-6\",\n            key: 'postalcode',\n            type: 'input',\n            templateOptions: {\n              type: 'text',\n              label: 'Zip',\n            //  placeholder: 'Enter Zip',\n              required: true\n            } , //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.postalcode\"\n            }\n          }\n        ]\n      },\n      //{\n      //  className:\"row\",\n      //  template:''\n      //},\n      {\n        // className: \"row\",\n        fieldGroup: [\n          {\n            className: \"col-sm-6\",\n            key: 'location',\n            type: 'input',\n            templateOptions: {\n              type: 'text',\n              label: 'Location',\n            //  placeholder: 'Location',\n              required: true\n            }, //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.location\"\n            }\n          },\n          {\n            className: \"col-sm-6\",\n            key: 'requestDate',\n            type: 'datepicker',\n            templateOptions: {\n              type: 'text',\n              label: 'Date Requested',\n             // placeholder: 'Date',\n              required: true,\n              datepickerPopup: \"dd-MMMM-yyyy\"\n            }, //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.requestDate\"\n            }\n          },\n          {\n            className: \"col-sm-6\",\n            key: 'requestTime',\n            type: 'timepicker',\n            templateOptions: {\n              label: 'Time Requested',\n            }, //end templateOptions\n            expressionProperties:{\n              'templateOptions.label':\"formState.labels.requestTime\"\n            }\n          }\n        ]\n      },\n    ];\n  }\n})();\n\n\n(function() {\n  'use strict';\n\n  angular\n      .module('teslaAngular')\n      .service('webDevTec', webDevTec);\n\n  /** @ngInject */\n  function webDevTec() {\n    var data = [\n      {\n        'title': 'AngularJS',\n        'url': 'https://angularjs.org/',\n        'description': 'HTML enhanced for web apps!',\n        'logo': 'angular.png'\n      },\n      {\n        'title': 'BrowserSync',\n        'url': 'http://browsersync.io/',\n        'description': 'Time-saving synchronised browser testing.',\n        'logo': 'browsersync.png'\n      },\n      {\n        'title': 'GulpJS',\n        'url': 'http://gulpjs.com/',\n        'description': 'The streaming build system.',\n        'logo': 'gulp.png'\n      },\n      {\n        'title': 'Jasmine',\n        'url': 'http://jasmine.github.io/',\n        'description': 'Behavior-Driven JavaScript.',\n        'logo': 'jasmine.png'\n      },\n      {\n        'title': 'Karma',\n        'url': 'http://karma-runner.github.io/',\n        'description': 'Spectacular Test Runner for JavaScript.',\n        'logo': 'karma.png'\n      },\n      {\n        'title': 'Protractor',\n        'url': 'https://github.com/angular/protractor',\n        'description': 'End to end test framework for AngularJS applications built on top of WebDriverJS.',\n        'logo': 'protractor.png'\n      },\n      {\n        'title': 'Bootstrap',\n        'url': 'http://getbootstrap.com/',\n        'description': 'Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile first projects on the web.',\n        'logo': 'bootstrap.png'\n      },\n      {\n        'title': 'Angular UI Bootstrap',\n        'url': 'http://angular-ui.github.io/bootstrap/',\n        'description': 'Bootstrap components written in pure AngularJS by the AngularUI Team.',\n        'logo': 'ui-bootstrap.png'\n      },\n      {\n        'title': 'Sass (Node)',\n        'url': 'https://github.com/sass/node-sass',\n        'description': 'Node.js binding to libsass, the C version of the popular stylesheet preprocessor, Sass.',\n        'logo': 'node-sass.png'\n      }\n    ];\n\n    this.getTec = getTec;\n\n    function getTec() {\n      return data;\n    }\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .directive('acmeMalarkey', acmeMalarkey);\n\n  /** @ngInject */\n  function acmeMalarkey(malarkey) {\n    var directive = {\n      restrict: 'E',\n      scope: {\n        extraValues: '='\n      },\n      template: '&nbsp;',\n      link: linkFunc,\n      controller: MalarkeyController,\n      controllerAs: 'vm'\n    };\n\n    return directive;\n\n    function linkFunc(scope, el, attr, vm) {\n      var watcher;\n      var typist = malarkey(el[0], {\n        typeSpeed: 40,\n        deleteSpeed: 40,\n        pauseDelay: 800,\n        loop: true,\n        postfix: ' '\n      });\n\n      el.addClass('acme-malarkey');\n\n      angular.forEach(scope.extraValues, function(value) {\n        typist.type(value).pause().delete();\n      });\n\n      watcher = scope.$watch('vm.contributors', function() {\n        angular.forEach(vm.contributors, function(contributor) {\n          typist.type(contributor.login).pause().delete();\n        });\n      });\n\n      scope.$on('$destroy', function () {\n        watcher();\n      });\n    }\n\n    /** @ngInject */\n    function MalarkeyController($log, githubContributor) {\n      var vm = this;\n\n      vm.contributors = [];\n\n      activate();\n\n      function activate() {\n        return getContributors().then(function() {\n          $log.info('Activated Contributors View');\n        });\n      }\n\n      function getContributors() {\n        return githubContributor.getContributors(10).then(function(data) {\n          vm.contributors = data;\n\n          return vm.contributors;\n        });\n      }\n    }\n\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .factory('githubContributor', githubContributor);\n\n  /** @ngInject */\n  function githubContributor($log, $http) {\n    var apiHost = 'https://api.github.com/repos/Swiip/generator-gulp-angular';\n\n    var service = {\n      apiHost: apiHost,\n      getContributors: getContributors\n    };\n\n    return service;\n\n    function getContributors(limit) {\n      if (!limit) {\n        limit = 30;\n      }\n\n      return $http.get(apiHost + '/contributors?per_page=' + limit)\n        .then(getContributorsComplete)\n        .catch(getContributorsFailed);\n\n      function getContributorsComplete(response) {\n        return response.data;\n      }\n\n      function getContributorsFailed(error) {\n        $log.error('XHR Failed for getContributors.\\n' + angular.toJson(error.data, true));\n      }\n    }\n  }\n})();\n\n// Borrowed from https://scotch.io/tutorials/internationalization-of-angularjs-applications\n\nangular.module('teslaAngular') .service('LocaleService', function ($translate, LOCALES, $rootScope, tmhDynamicLocale) {\n  'use strict';\n  // PREPARING LOCALES INFO\n  var localesObj = LOCALES.locales;\n\n  // locales and locales display names\n  var _LOCALES = Object.keys(localesObj);\n  if (!_LOCALES || _LOCALES.length === 0) {\n    console.error('There are no _LOCALES provided');\n  }\n  var _LOCALES_DISPLAY_NAMES = [];\n  _LOCALES.forEach(function (locale) {\n    _LOCALES_DISPLAY_NAMES.push(localesObj[locale]);\n  });\n\n  // STORING CURRENT LOCALE\n  var currentLocale = $translate.proposedLanguage();// because of async loading\n\n  // METHODS\n  var checkLocaleIsValid = function (locale) {\n    return _LOCALES.indexOf(locale) !== -1;\n  };\n\n  var setLocale = function (locale) {\n    if (!checkLocaleIsValid(locale)) {\n      console.error('Locale name \"' + locale + '\" is invalid');\n      return;\n    }\n    currentLocale = locale;// updating current locale\n\n    // asking angular-translate to load and apply proper translations\n    $translate.use(locale);\n  };\n\n  // EVENTS\n  // on successful applying translations by angular-translate\n  $rootScope.$on('$translateChangeSuccess', function (event, data) {\n    document.documentElement.setAttribute('lang', data.language);// sets \"lang\" attribute to html\n\n    // asking angular-dynamic-locale to load and apply proper AngularJS $locale setting\n    tmhDynamicLocale.set(data.language.toLowerCase().replace(/_/g, '-'));\n  });\n\n  return {\n    getLocaleDisplayName: function () {\n      return localesObj[currentLocale];\n    },\n    setLocaleByDisplayName: function (localeDisplayName) {\n      setLocale(\n        _LOCALES[\n          _LOCALES_DISPLAY_NAMES.indexOf(localeDisplayName)// get locale index\n          ]\n      );\n    },\n    getLocalesDisplayNames: function () {\n      return _LOCALES_DISPLAY_NAMES;\n    }\n  };\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .controller('MainController', MainController);\n\n  /** @ngInject */\n  function MainController($timeout, webDevTec, toastr) {\n    var vm = this;\n\n    vm.awesomeThings = [];\n    vm.classAnimation = '';\n    vm.creationDate = 1461208903860;\n    vm.showToastr = showToastr;\n\n    activate();\n\n    function activate() {\n      getWebDevTec();\n      $timeout(function() {\n        vm.classAnimation = 'rubberBand';\n      }, 4000);\n    }\n\n    function showToastr() {\n      toastr.info('Fork <a href=\"https://github.com/Swiip/generator-gulp-angular\" target=\"_blank\"><b>generator-gulp-angular</b></a>');\n      vm.classAnimation = '';\n    }\n\n    function getWebDevTec() {\n      vm.awesomeThings = webDevTec.getTec();\n\n      angular.forEach(vm.awesomeThings, function(awesomeThing) {\n        awesomeThing.rank = Math.random();\n      });\n    }\n  }\n})();\n\n// Borrowed from https://scotch.io/tutorials/internationalization-of-angularjs-applications\n\nangular.module('teslaAngular') .directive('ngTranslateLanguageSelect', function (LocaleService) {\n  'use strict';\n  return {\n    restrict: 'A',\n    replace: true,\n    template: ''+\n    '<div class=\"language-select\" ng-if=\"visible\" style=\"margin-top:1rem\">'+\n    '<label class=\"control-label\">'+\n    '{{\"directives.language-select.Language\" | translate}}:'+\n    '</label>'+\n\n    '<select ng-model=\"currentLocaleDisplayName\"'+\n    'ng-options=\"localesDisplayName for localesDisplayName in localesDisplayNames\"'+\n    'ng-change=\"changeLanguage(currentLocaleDisplayName)\" class=\"form-control\">'+\n    '</select>'+\n    '</div>'+\n    '',\n    controller: function ($scope) {\n      $scope.currentLocaleDisplayName = LocaleService.getLocaleDisplayName();\n      $scope.localesDisplayNames = LocaleService.getLocalesDisplayNames();\n      $scope.visible = $scope.localesDisplayNames &&\n        $scope.localesDisplayNames.length > 1;\n\n      $scope.changeLanguage = function (locale) {\n        LocaleService.setLocaleByDisplayName(locale);\n      };\n    }\n  };\n});\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .run(runBlock);\n\n  /** @ngInject */\n  function runBlock($log, formlyConfig, formlyValidationMessages) {\n    var ngModelAttrs = {};\n\n    /*\n     timepicker\n     */\n\n    ngModelAttrs = {};\n\n    // Set up validate on form submissions\n    formlyConfig.extras.errorExistsAndShouldBeVisibleExpression = 'fc.$touched || form.$submitted';\n    formlyValidationMessages.addStringMessage('required', 'This field is required');\n\n    // attributes\n    angular.forEach([\n      'meridians',\n      'readonly-input',\n      'mousewheel',\n      'arrowkeys'\n    ], function(attr) {\n      ngModelAttrs[camelize(attr)] = {attribute: attr};\n    });\n\n    // bindings\n    angular.forEach([\n      'hour-step',\n      'minute-step',\n      'show-meridian'\n    ], function(binding) {\n      ngModelAttrs[camelize(binding)] = {bound: binding};\n    });\n\n    formlyConfig.setType({\n      name: 'timepicker',\n      template: '<timepicker ng-model=\"model[options.key]\" show-spinners=\"false\"></timepicker>',\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        ngModelAttrs: ngModelAttrs,\n        templateOptions: {\n          datepickerOptions: {}\n        }\n      }\n    });\n\n    formlyConfig.setType({\n      name: 'datepicker',\n      templateUrl:  '/app/directives/datepicker.html',\n      wrapper: ['bootstrapLabel', 'bootstrapHasError'],\n      defaultOptions: {\n        ngModelAttrs: ngModelAttrs,\n        templateOptions: {\n          datepickerOptions: {\n            format: 'MMMM dd, yyyy',\n            initDate: new Date()\n          }\n        }\n      },\n      controller: ['$scope', function ($scope) {\n        $scope.datepicker = {};\n        $scope.datepicker.opened = false;\n        $scope.datepicker.open = function ($event) {\n          $scope.datepicker.opened = !$scope.datepicker.opened;\n        };\n      }]\n    });\n\n    $log.debug('runBlock end');\n  }\n\n  function camelize(string) {\n    string = string.replace(/[\\-_\\s]+(.)?/g, function(match, chr) {\n      return chr ? chr.toUpperCase() : '';\n    });\n    // Ensure 1st char is always lowercase\n    return string.replace(/^([A-Z])/, function(match, chr) {\n      return chr ? chr.toLowerCase() : '';\n    });\n  }\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .config(routerConfig);\n\n  /** @ngInject */\n  function routerConfig($stateProvider, $urlRouterProvider) {\n    $urlRouterProvider.when('/', '/login');\n\n    $stateProvider.state('home', {\n        url: '/yoman',\n        templateUrl: 'app/main/main.html',\n        controller: 'MainController',\n        controllerAs: 'main'\n      });\n\n    $stateProvider.state('login',{\n      url: '/login',\n      templateUrl: 'app/views/login/login.tpl.html'\n    });\n\n    $stateProvider.state('entry',{\n      url: '/entry',\n      templateUrl: 'app/views/entry/entry.tpl.html'\n    });\n\n    $stateProvider.state('listing',{\n      url: '/listing',\n      templateUrl: 'app/views/listing/listing.tpl.html'\n    });\n\n    $urlRouterProvider.otherwise('/');\n  }\n\n})();\n\n/* global malarkey:false, moment:false */\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .constant('malarkey', malarkey)\n    .constant('moment', moment)\n    .constant('LOCALES', {\n      'locales': {\n        'es_MX': 'Español',\n        'en_US': 'English'\n      },\n      'preferredLocale': 'en_US'\n    });\n\n})();\n\n(function() {\n  'use strict';\n\n  angular\n    .module('teslaAngular')\n    .config(config);\n\n  /** @ngInject */\n  function config($logProvider, toastrConfig, $translateProvider, tmhDynamicLocaleProvider) {\n    // Enable log\n    $logProvider.debugEnabled(true);\n\n    // Set options third-party lib\n    toastrConfig.allowHtml = true;\n    toastrConfig.timeOut = 3000;\n    toastrConfig.positionClass = 'toast-top-right';\n    toastrConfig.preventDuplicates = true;\n    toastrConfig.progressBar = true;\n\n    $translateProvider.useMissingTranslationHandlerLog();\n    $translateProvider.useStaticFilesLoader({\n      prefix: 'resources/locale-',// path to translations files\n      suffix: '.json'// suffix, currently- extension of the translations\n    });\n    $translateProvider.preferredLanguage('en_US');// is applied on first load\n    $translateProvider.useLocalStorage();// saves selected language to localStorage\n    tmhDynamicLocaleProvider.localeLocationPattern('bower_components/angular-i18n/angular-locale_{{locale}}.js');\n  }\n\n})();\n\nangular.module(\"teslaAngular\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"app/directives/datepicker.html\",\"<p class=input-group><input type=text id={{::id}} name={{::id}} ng-model=model[options.key] class=form-control ng-click=datepicker.open($event) uib-datepicker-popup={{to.datepickerOptions.format}} is-open=datepicker.opened datepicker-options=to.datepickerOptions> <span class=input-group-btn><button type=button class=\\\"btn btn-default\\\" ng-click=datepicker.open($event) ng-disabled=to.disabled><i class=\\\"glyphicon glyphicon-calendar\\\"></i></button></span></p>\");\n$templateCache.put(\"app/main/main.html\",\"<div class=container><div><acme-navbar creation-date=main.creationDate></acme-navbar></div><div class=\\\"jumbotron text-center\\\"><h1>\\'Allo, \\'Allo!</h1><p class=lead><img src=assets/images/yeoman.png alt=\\\"I\\'m Yeoman\\\"><br>Always a pleasure scaffolding your apps.</p><p class=\\\"animated infinite\\\" ng-class=main.classAnimation><button type=button class=\\\"btn btn-lg btn-success\\\" ng-click=main.showToastr()>Splendid Toastr</button></p><p>With ♥ thanks to the contributions of<acme-malarkey extra-values=\\\"[\\'Yeoman\\', \\'Gulp\\', \\'Angular\\']\\\"></acme-malarkey></p></div><div class=row><div class=\\\"col-sm-6 col-md-4\\\" ng-repeat=\\\"awesomeThing in main.awesomeThings | orderBy:\\'rank\\'\\\"><div class=thumbnail><img class=pull-right ng-src=\\\"assets/images/{{ awesomeThing.logo }}\\\" alt=\\\"{{ awesomeThing.title }}\\\"><div class=caption><h3>{{ awesomeThing.title }}</h3><p>{{ awesomeThing.description }}</p><p><a ng-href={{awesomeThing.url}}>{{ awesomeThing.url }}</a></p></div></div></div></div></div>\");\n$templateCache.put(\"app/views/entry/entry.tpl.html\",\"<img src=/assets/images/car-mountainsbw.jpg width=100%><div ng-controller=\\\"entry.ctrl as entryCtrl\\\"><div class=container><div class=row><div class=\\\"col-sm-4 col-sm-push-4\\\"><div ng-translate-language-select></div></div></div><div class=row><div class=\\\"col-sm-8 col-sm-push-2\\\"><div class=section-subtitle><h1>Schedule an Appointment</h1></div><form novalidate ng-submit=entryCtrl.submit() name=entryCtrl.entryForm><div class=row><formly-form model=entryCtrl.entry fields=entryCtrl.entryFields form=entryCtrl.entryForm options=entryCtrl.options><div class=row><div class=\\\"col-sm-4 col-sm-push-7\\\"><button type=submit class=\\\"btn btn-primary btn-block\\\">Submit</button></div></div></formly-form></div></form></div></div></div></div>\");\n$templateCache.put(\"app/views/listing/listing.tpl.html\",\"<div ng-controller=\\\"listing.ctrl as listingCtrl\\\"><nav class=\\\"navbar navbar-inverse\\\"><div class=container><div class=navbar-header><a class=navbar-brand href=#>TESLACOIL</a></div></div></nav><div class=container><div class=row><div class=\\\"col-sm-4 col-sm-push-4\\\"><div ng-translate-language-select></div></div></div><div class=row><div class=col-xs-12><div class=table-responsive><table class=\\\"table table-condensed\\\"><thead><th>{{\\\"views.firstName\\\"|translate}}</th><th>{{\\\"views.lastName\\\"|translate}}</th><th>{{\\\"views.email\\\"|translate}}</th><th>{{\\\"views.phone\\\"|translate}}</th><th>{{\\\"views.postalcode\\\"|translate}}</th><th>{{\\\"views.location\\\"|translate}}</th><th>{{\\\"views.requestTime\\\"|translate}}</th><th>{{\\\"views.submitTime\\\"|translate}}</th></thead><tbody><tr ng-repeat=\\\"item in listingCtrl.listitems\\\"><td>{{item.firstname}}</td><td>{{item.lastname}}</td><td>{{item.email}}</td><td>{{item.phone}}</td><td>{{item.postalcode}}</td><td>{{item.location}}</td><td>{{item.requestTime}}</td><td>{{item.submitTime}}</td></tr></tbody></table></div></div></div></div></div>\");\n$templateCache.put(\"app/views/login/login.tpl.html\",\"<div class=login-main><div ng-controller=\\\"login.ctrl as loginCtrl\\\"><div class=container style=padding-top:20rem><div class=row><div class=\\\"col-xs-10 col-sm-5 col-md-4 col-sm-push-7 col-xs-push-1\\\"><div class=\\\"panel panel-default\\\"><div class=panel-body style=margin-bottom:2rem><div class=row><div class=\\\"col-xs-10 col-xs-push-1\\\"><div class=section-title><h2>Sign-in</h2></div><div class=form-group><input type=email class=form-control placeholder=\\\"Email Address\\\" ng-model=loginCtrl.email></div><div class=form-group><input type=password class=form-control placeholder=Password ng-model=loginCtrl.password></div><button type=submit class=\\\"btn btn-primary btn-block\\\" ng-click=loginCtrl.signIn()>SIGN IN</button></div></div></div></div></div></div></div></div></div>\");\n$templateCache.put(\"app/components/navbar/navbar.html\",\"<nav class=\\\"navbar navbar-static-top navbar-inverse\\\"><div class=container-fluid><div class=navbar-header><a class=navbar-brand href=https://github.com/Swiip/generator-gulp-angular><span class=\\\"glyphicon glyphicon-home\\\"></span> Gulp Angular</a></div><div class=\\\"collapse navbar-collapse\\\" id=bs-example-navbar-collapse-6><ul class=\\\"nav navbar-nav\\\"><li class=active><a ng-href=#>Home</a></li><li><a ng-href=#>About</a></li><li><a ng-href=#>Contact</a></li></ul><ul class=\\\"nav navbar-nav navbar-right acme-navbar-text\\\"><li>Application was created {{ vm.relativeDate }}.</li></ul></div></div></nav>\");}]);"],"sourceRoot":"/source/"}